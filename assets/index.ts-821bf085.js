import{f as _,g as E}from"./index.esm-e3d6f8ec.js";import{ao as p,ap as D}from"./store-fcbe2a1f.js";import{g as T}from"./domUtils-6bdec28b.js";import{g as v}from"./getTargetElementAttributes-3f1109f1.js";import{a as N}from"./options-0d513709.js";import{g as q}from"./scribeSuggestions-6bff5e43.js";import{v as h}from"./v4-c70744d4.js";import"./_commonjsHelpers-de833af9.js";const B=e=>{switch(e.toLowerCase()){case"arrowleft":return"left";case"arrowright":return"right";case"arrowup":return"up";case"arrowdown":return"down";case"escape":return"esc";case" ":return"space";case"delete":return"del";default:return e.toLowerCase()}},H=e=>["Control","Shift","Alt","Meta","CapsLock","NumLock","ScrollLock"].includes(e);var Y=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};Y.SENTRY_RELEASE={id:"c7e5656e859d02ad6b0b543cae8f4abd4f8ff10c"},console.log("[Long Running Recorder] Content script initialised");const $=e=>{if(!e)return"";const s=[];let n=0;for(;s.length<2&&n<=e.length;){let t=e.indexOf(`
`,n);t===-1&&(t=e.length);let o=e.slice(n,t);o.endsWith("\r")&&(o=o.slice(0,-1)),o.trim().length!==0&&s.push(o),n=t+1}const i=n<e.length;return s.join(`
`)+(i?"\u2026":"")},g=window!==window.top,O=1e3,b="data-long-running-recorder-frame-path-id";let y=!1,w=!1;const X=e=>{if(!e)return!1;if(e instanceof HTMLInputElement&&e.type==="password")return!0;const s=["cc-number","cc-exp","cc-csc"];return!!(e instanceof HTMLInputElement&&s.includes(e.autocomplete))},M=async()=>{if(!g)return console.log("Not in an iframe, returning zero offset"),{left:0,top:0};const e=h(),s=e;return new Promise((n,i)=>{var c;let t=!1;const o=setTimeout(()=>{var r;if(!t){window.removeEventListener("message",a),console.warn("Falling back to simple offset calculation due to timeout");const l=((r=window.frameElement)==null?void 0:r.getBoundingClientRect())||{left:0,top:0};n({left:l.left,top:l.top})}},O),a=r=>{var l;((l=r.data)==null?void 0:l.iframeOffsetResponseId)===e&&(t=!0,window.removeEventListener("message",a),clearTimeout(o),n({left:r.data.left,top:r.data.top}))};window.addEventListener("message",a);try{if(window.parent){const r={tempFramePathId:s,iframeOffsetRequestId:e,left:0,top:0};window.parent.postMessage(r,"*")}else throw new Error("Cannot access parent frame")}catch{clearTimeout(o),window.removeEventListener("message",a),console.warn("Failed to send message to parent frame, falling back to simple offset");const r=((c=window.frameElement)==null?void 0:c.getBoundingClientRect())||{left:0,top:0};n({left:r.left,top:r.top})}})};window.addEventListener("message",async e=>{var s,n;if(!(!e.source||!e.data)){if((s=e.data)!=null&&s.iframeOffsetRequestId){const i=e.source,t=[...document.querySelectorAll("iframe")].find(m=>m.contentWindow===i);if(!t){console.warn("Could not find source iframe for offset calculation");return}const o=`${b}-${e.data.tempFramePathId}`;t.setAttribute(o,e.data.tempFramePathId),setTimeout(()=>{t==null||t.removeAttribute(o)},O);const a=t.getBoundingClientRect(),c=a.left,r=a.top,l=e.data.left+c,d=e.data.top+r;if(g)try{console.log("Accumulated offset:",l,d),window.parent.postMessage({tempFramePathId:e.data.tempFramePathId,iframeOffsetRequestId:e.data.iframeOffsetRequestId,left:l,top:d},"*")}catch{console.warn("Failed to propagate offset message upward")}else{const m={tempFramePathId:e.data.tempFramePathId,iframeOffsetResponseId:e.data.iframeOffsetRequestId,left:l,top:d};t.contentWindow&&t.contentWindow.postMessage(m,"*")}}if((n=e.data)!=null&&n.iframeOffsetResponseId){const i=`${b}-${e.data.tempFramePathId}`,t=[...document.querySelectorAll("iframe")].find(o=>o.getAttribute(i)===e.data.tempFramePathId);if(t!=null&&t.contentWindow){t.removeAttribute(i);try{t.contentWindow.postMessage({iframeOffsetResponseId:e.data.iframeOffsetResponseId,left:e.data.left,top:e.data.top},"*")}catch{console.warn("Failed to propagate offset message downward")}}}}});const P=()=>{if(location.ancestorOrigins&&location.ancestorOrigins.length>0)return location.ancestorOrigins[location.ancestorOrigins.length-1];if(!g)return location.origin},S=async e=>{var L,I;if(X(document.activeElement)||!e.key||H(e.key))return;const s=Date.now(),{key:n,shiftKey:i,altKey:t,ctrlKey:o,metaKey:a}=e,c=window.devicePixelRatio||1;let r=null;try{e.target&&(r=_(e.target))}catch{console.log("Could not generate selector for element.")}const l=v(e.target),d=E(e.target,{ignoreId:!0});let m=null;const R=document.activeElement;if(R){let f={left:0,top:0};try{f=await M()}catch(K){if(console.warn("Failed to get accumulated frame offset for keyboard event:",K),g&&window.frameElement){const C=window.frameElement.getBoundingClientRect();f={left:C.left,top:C.top}}}const u=R.getBoundingClientRect();m={x:(u.left+u.width/2+f.left)*c,y:(u.top+u.height/2+f.top)*c}}const W={id:h(),type:"long_running_recorder_action",kind:p.KEYBOARD_ACTIONS.PRESS,direction:p.KEY_DIRECTIONS.DOWN,modifiers:{shiftKey:i,altKey:t,ctrlKey:o,metaKey:a},target_selector:r,target_xpath:d,target_tag:(L=e.target)==null?void 0:L.tagName,target_element:T((((I=e.target)==null?void 0:I.outerHTML)||"").replace(/\s(?:src|style)="[^"]*"/gi,"")),target_element_attributes:l,key:B(n),timestamp:s,url:window.location.href,top_frame_origin:P(),devicePixelRatio:c,position:m,viewport:{width:window.innerWidth,height:window.innerHeight},wasInIframe:g,scrollPosition:{x:window.scrollX,y:window.scrollY}};chrome.runtime.sendMessage({messageType:"long_running_recorder_action",action:W})},A=async e=>{const s=Date.now(),n=window.devicePixelRatio||1;let i={left:0,top:0};try{i=await M(),console.log("Accumulated frame offset:",i)}catch(l){if(console.warn("Failed to get accumulated frame offset:",l),g&&window.frameElement){const d=window.frameElement.getBoundingClientRect();i={left:d.left,top:d.top}}}let t=null;try{t=_(e.target)}catch{console.log("Could not generate selector for element.")}const o=v(e.target),a=E(e.target,{ignoreId:!0}),c=D(e.target),r={id:h(),type:"long_running_recorder_action",kind:p.MOUSE_ACTIONS.CLICK,position:{x:(e.clientX+i.left)*n,y:(e.clientY+i.top)*n},viewport:{width:window.innerWidth,height:window.innerHeight},wasInIframe:g,scrollPosition:{x:window.scrollX,y:window.scrollY},description:c,devicePixelRatio:n,target_selector:t,target_xpath:a,target_tag:e.target.tagName,target_element:T((e.target.outerHTML||"").replace(/\s(?:src|style)="[^"]*"/gi,"")),target_text:$(e.target.innerText||e.target.textContent||"").substring(0,2048),target_element_attributes:o,timestamp:s,url:window.location.href,top_frame_origin:P()};chrome.runtime.sendMessage({messageType:"long_running_recorder_action",action:r})},F=()=>{console.log("[Long Running Recorder] Initializing recorder..."),chrome.runtime.onMessage.addListener(e=>{e.messageType==="startRecording"||e.messageType==="browserStartRecording"||e.messageType==="openGuideMeSidepanel"||e.messageType==="guideMeStepForward"||e.messageType==="getGuideMeSessionId"||e.messageType==="startCopilot"||e.messageType==="startCopilotSearch"||e.messageType==="recaptureStep"||e.messageType==="currentVisibleAction"?(console.log("[Long Running Recorder] Manual recording started, pausing long-running recorder"),y=!0,U()):(e.messageType==="endRecording"||e.messageType==="optionsChanged"||e.messageType==="browserDeleteRecording"||e.messageType==="browserCompleteCapture")&&(console.log("[Long Running Recorder] Manual recording ended, resuming long-running recorder"),y=!1,k())}),k()},k=()=>{w||y||(document.addEventListener("pointerdown",A,{capture:!0}),document.addEventListener("keydown",S,{capture:!0}),w=!0)},U=()=>{w&&(document.removeEventListener("pointerdown",A,{capture:!0}),document.removeEventListener("keydown",S,{capture:!0}),w=!1)},z=async()=>{const e=await q(),s=await N("recordingControlsPreference")==="floating-button";if(!e||s)return!1;try{const n=await new Promise(o=>{chrome.runtime.sendMessage({messageType:"getAllowedDomains"},a=>{o(Array.isArray(a==null?void 0:a.allowedDomains)?a.allowedDomains:[])})});if(!n||n.length===0)return!1;const i=window.location.hostname.toLowerCase();let t=null;if(window===window.top)t=i;else if(location.ancestorOrigins&&location.ancestorOrigins.length>0)try{const o=location.ancestorOrigins[location.ancestorOrigins.length-1];t=new URL(o).hostname.toLowerCase()}catch{}return!!(o=>{if(!o)return!1;const a=o.toLowerCase();return n.some(c=>{if(!c)return!1;const r=c.toLowerCase();return a===r||a.startsWith("www.")&&a.slice(4)===r||r.startsWith("www.")&&a===r.slice(4)?!0:a.endsWith(`.${r}`)})})(t)}catch(n){return console.warn("[Long Running Recorder] Failed to read allowed domains",n),!1}},x=()=>{z().then(e=>{if(!e){console.log("[Long Running Recorder] Recorder disabled");return}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",F):F()}).catch(e=>{console.warn("[Long Running Recorder] Error while checking enablement",e)})};chrome.runtime.onMessage.addListener(e=>{e.messageType==="optionsChanged"&&x()}),x();

var s,d=new Uint8Array(16);function i(){if(!s&&(s=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!s))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return s(d)}const g=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function p(r){return typeof r=="string"&&g.test(r)}for(var n=[],u=0;u<256;++u)n.push((u+256).toString(16).substr(1));function f(r){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,e=(n[r[o+0]]+n[r[o+1]]+n[r[o+2]]+n[r[o+3]]+"-"+n[r[o+4]]+n[r[o+5]]+"-"+n[r[o+6]]+n[r[o+7]]+"-"+n[r[o+8]]+n[r[o+9]]+"-"+n[r[o+10]]+n[r[o+11]]+n[r[o+12]]+n[r[o+13]]+n[r[o+14]]+n[r[o+15]]).toLowerCase();if(!p(e))throw TypeError("Stringified UUID is invalid");return e}function y(r,o,e){r=r||{};var a=r.random||(r.rng||i)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,o){e=e||0;for(var t=0;t<16;++t)o[e+t]=a[t];return o}return f(a)}export{p as a,i as r,f as s,y as v};

import{bB as p,s as l,ca as c,ao as m,c0 as _,t as f}from"./store-fcbe2a1f.js";const h=200;function S(a){if(!a)return"";const o=a.indexOf(">");return o===-1?null:a.substring(0,o+1)}function I(a,o,s,d,n,u){return a.post("/signed_urls/",{name:"a dom",file_type:"html"}).then(t=>{const{data:{internal_url:e,upload_url:r}}=t;return{internal_url:e,upload_url:r}}).then(({internal_url:t,upload_url:e})=>(l.dispatch(c({tempId:s,partialAction:{dom_url:t,dom_upload_status:m.UPLOAD_STATUS.WAITING}})),_(e,d,"text/html",{timeout:6e4}).then(r=>({res:r,upload_url:e})))).then(({res:t,upload_url:e})=>{if(t.ok){console.log("Succ upload!");const r={scribeId:o,timestamp:n},i={status:t.status,statusText:t.statusText,url:e,headers:Object.fromEntries(t.headers.entries()),config:{url:e,data:{}},request:{}};return p("dom_upload_succeeded",{dom_data:r,url:e}),f("dom_upload_succeeded",i),l.dispatch(c({tempId:s,partialAction:{dom_upload_status:m.UPLOAD_STATUS.SUCCESS}})),t}throw new Error(`DOM upload failed with status ${t.status}`)}).catch(t=>{throw console.log("Fail upload: ",t),l.dispatch(c({tempId:s,partialAction:{failed_ss:!0,dom_upload_status:m.UPLOAD_STATUS.ERROR}})),t})}async function A({domString:a,name:o,email:s,scribeId:d,actionId:n,timestamp:u,api:t}){const e="/sps/",r={dom_data:a,name:o||"adom",email:s,needs_redaction:!0,scribeId:d,actionId:n,timestamp:u,file_type:"html"},i=await t.post(e,r);if(!i||!i.data)throw new Error("Failed to upload DOM for SPS redaction");return l.dispatch(c({tempId:n,partialAction:{dom_url:i.data.internal_url,dom_upload_status:m.UPLOAD_STATUS.WAITING}})),i.data}const T=async(a,o,s,d,n,u,t=null,e=!1,r=null)=>{if(d){if(u>h){p("dom_upload_failed",{dom_data:{timestamp:n,scribeId:o,retries:u},error:t,reason:"retry_count_exceeded"});return}return e?A({domString:d,name:"adom",email:r,scribeId:o,actionId:s,timestamp:n,api:a}):I(a,o,s,d,n)}},O=()=>{try{return Object.values(window.self.location.ancestorOrigins).some(a=>a.includes("extension://"))}catch{return!1}};export{S as g,O as i,T as u};

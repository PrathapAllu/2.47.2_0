const u="ExtensionPreferences",s="settings",c="allowedDomains";let t=null;const i=()=>t?Promise.resolve(t):new Promise((n,o)=>{const e=indexedDB.open(u,1);e.onupgradeneeded=()=>{const r=e.result;r.objectStoreNames.contains(s)||r.createObjectStore(s,{keyPath:"key"})},e.onsuccess=()=>{t=e.result,n(t)},e.onerror=()=>o(e.error)}),l=async()=>{const n=await i();return new Promise(o=>{const e=n.transaction(s,"readonly").objectStore(s).get(c);e.onsuccess=()=>{var r;o(Array.isArray((r=e.result)==null?void 0:r.value)?e.result.value:[])},e.onerror=()=>o([])})},d=async n=>{const o=await i();return new Promise((e,r)=>{const a=o.transaction(s,"readwrite").objectStore(s).put({key:c,value:n});a.onsuccess=()=>e(),a.onerror=()=>r(a.error)})};export{l as g,d as s};
